name: Rocky Linux

on:
  pull_request:
  # github has yet to figure out how to do fast-forward merges without changing the commit hash
  # so we need to rebuild from main to get the correct hash
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Rocky Linux
    runs-on: ubuntu-latest
    container: docker.io/rockylinux/rockylinux:9

    env:
      PKG_CONFIG_PATH: /usr/local/lib/pkgconfig
      CFLAGS: -march=x86-64-v3 -O3 -flto=auto -D_GLIBCXX_ASSERTIONS -D_FORTIFY_SOURCE=3
      CXXFLAGS: -march=x86-64-v3 -O3 -flto=auto -D_GLIBCXX_ASSERTIONS -D_FORTIFY_SOURCE=3
      LDFLAGS: -Wl,-z,relro -Wl,-z,now -flto=auto
      CC: ccache gcc
      CXX: ccache g++

    steps:
      - uses: actions/checkout@v4

      - name: install build deps
        run: |
          dnf install -y python3.12-pip gcc-toolset-14 git cmake xz jq
          pip3.12 install meson ninja

      - name: install ccache
        run: |
          CCACHE_URL="$(curl -s https://api.github.com/repos/ccache/ccache/releases/latest | jq --raw-output '.assets[] | select(.name | test("linux-x86_64.tar.xz$")) | .browser_download_url')"
          curl -s -L "${CCACHE_URL}" | tar --xz --extract
          cp ccache-*-linux-x86_64/ccache /usr/local/bin/ccache

      - uses: hendrikmuhs/ccache-action@v1.2

      - name: install botan
        run: |
          source /opt/rh/gcc-toolset-14/enable
          cd
          curl -s -L https://botan.randombit.net/releases/Botan-3.8.1.tar.xz | tar --xz --extract
          cd Botan-3.8.1
          python3.12 ./configure.py --build-tool=ninja --disable-deprecated-features --without-documentation
          ninja install

      - name: configure
        run: |
          source /opt/rh/gcc-toolset-14/enable
          meson setup --prefix=/root/s3cpp_install --strip --prefer-static --wrap-mode=forcefallback --buildtype=release -Db_lto=true -Db_pie=true build

      - name: compile
        run: |
          source /opt/rh/gcc-toolset-14/enable
          meson compile -C build

      - name: test
        run: |
          source /opt/rh/gcc-toolset-14/enable
          meson test -C build

      - name: install
        run: |
          source /opt/rh/gcc-toolset-14/enable
          meson install -C build

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: tools
          path: /root/s3cpp_install/bin/*
          if-no-files-found: error
